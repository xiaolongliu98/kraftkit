name: Stable Tests

on:
  push:
    branches: [stable]

jobs:
  gounit-ubuntu:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-go@v5
        with:
          go-version: 1.21.2
          cache: false

      - name: Set Go variables
        id: goenv
        run: |
          {
            echo "cache=$(go env GOCACHE)"
            echo "modcache=$(go env GOMODCACHE)"
            echo "mod=$(go env GOMOD)"
          } >>"$GITHUB_OUTPUT"

      - name: Go caches
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.goenv.outputs.cache }}
            ${{ steps.goenv.outputs.modcache }}
          key: ${{ github.job }}-${{ runner.os }}-go-${{ hashFiles(steps.goenv.outputs.mod) }}
          restore-keys: |
            ${{ github.job }}-${{ runner.os }}-go-

      - name: Run tests
        run: make test-unit

  gounit-mac:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-11, macos-12, mac-m2-14]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-go@v5
        with:
          go-version: 1.21.2
          cache: false

      - name: Set Go variables
        id: goenv
        run: |
          {
            echo "cache=$(go env GOCACHE)"
            echo "modcache=$(go env GOMODCACHE)"
            echo "mod=$(go env GOMOD)"
          } >>"$GITHUB_OUTPUT"

      - name: Go caches
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.goenv.outputs.cache }}
            ${{ steps.goenv.outputs.modcache }}
          key: ${{ github.job }}-${{ runner.os }}-go-${{ hashFiles(steps.goenv.outputs.mod) }}
          restore-keys: |
            ${{ github.job }}-${{ runner.os }}-go-

      - name: Run tests
        run: make test-unit

  e2e-ubuntu-cli:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, ubuntu-20.04]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21.2
          cache: false

      - name: Set Go variables
        id: goenv
        run: |
          {
            echo "cache=$(go env GOCACHE)"
            echo "modcache=$(go env GOMODCACHE)"
            echo "mod=$(go env GOMOD)"
          } >>"$GITHUB_OUTPUT"

      - name: Go caches
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.goenv.outputs.cache }}
            ${{ steps.goenv.outputs.modcache }}
          key: ${{ github.job }}-${{ runner.os }}-go-${{ hashFiles(steps.goenv.outputs.mod) }}
          restore-keys: |
            ${{ github.job }}-${{ runner.os }}-go-

      - name: Run framework unit tests
        run: go run github.com/onsi/ginkgo/v2/ginkgo -v -p -randomize-all ./test/e2e/framework/...

      - name: Run e2e tests
        env:
          KRAFTKIT_NO_CHECK_UPDATES: true
          DOCKER: ''
        run: make test-e2e DISTDIR="$(go env GOPATH)"/bin

  e2e-mac-cli:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-11, macos-12, mac-m2-14]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21.2
          cache: false

      - name: Set Go variables
        id: goenv
        run: |
          {
            echo "cache=$(go env GOCACHE)"
            echo "modcache=$(go env GOMODCACHE)"
            echo "mod=$(go env GOMOD)"
          } >>"$GITHUB_OUTPUT"

      - name: Go caches
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.goenv.outputs.cache }}
            ${{ steps.goenv.outputs.modcache }}
          key: ${{ github.job }}-${{ runner.os }}-go-${{ hashFiles(steps.goenv.outputs.mod) }}
          restore-keys: |
            ${{ github.job }}-${{ runner.os }}-go-

      - name: Run framework unit tests
        run: go run github.com/onsi/ginkgo/v2/ginkgo -v -p -randomize-all ./test/e2e/framework/...

      - name: Run e2e tests
        env:
          KRAFTKIT_NO_CHECK_UPDATES: true
          DOCKER: ''
        run: make test-e2e DISTDIR="$(go env GOPATH)"/bin
